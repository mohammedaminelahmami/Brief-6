{"ast":null,"code":"let shim;\n\nclass Y18N {\n  constructor(opts) {\n    // configurable options.\n    opts = opts || {};\n    this.directory = opts.directory || './locales';\n    this.updateFiles = typeof opts.updateFiles === 'boolean' ? opts.updateFiles : true;\n    this.locale = opts.locale || 'en';\n    this.fallbackToLanguage = typeof opts.fallbackToLanguage === 'boolean' ? opts.fallbackToLanguage : true; // internal stuff.\n\n    this.cache = Object.create(null);\n    this.writeQueue = [];\n  }\n\n  __() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof arguments[0] !== 'string') {\n      return this._taggedLiteral(arguments[0], ...arguments);\n    }\n\n    const str = args.shift();\n\n    let cb = function () {}; // start with noop.\n\n\n    if (typeof args[args.length - 1] === 'function') cb = args.pop();\n\n    cb = cb || function () {}; // noop.\n\n\n    if (!this.cache[this.locale]) this._readLocaleFile(); // we've observed a new string, update the language file.\n\n    if (!this.cache[this.locale][str] && this.updateFiles) {\n      this.cache[this.locale][str] = str; // include the current directory and locale,\n      // since these values could change before the\n      // write is performed.\n\n      this._enqueueWrite({\n        directory: this.directory,\n        locale: this.locale,\n        cb\n      });\n    } else {\n      cb();\n    }\n\n    return shim.format.apply(shim.format, [this.cache[this.locale][str] || str].concat(args));\n  }\n\n  __n() {\n    const args = Array.prototype.slice.call(arguments);\n    const singular = args.shift();\n    const plural = args.shift();\n    const quantity = args.shift();\n\n    let cb = function () {}; // start with noop.\n\n\n    if (typeof args[args.length - 1] === 'function') cb = args.pop();\n    if (!this.cache[this.locale]) this._readLocaleFile();\n    let str = quantity === 1 ? singular : plural;\n\n    if (this.cache[this.locale][singular]) {\n      const entry = this.cache[this.locale][singular];\n      str = entry[quantity === 1 ? 'one' : 'other'];\n    } // we've observed a new string, update the language file.\n\n\n    if (!this.cache[this.locale][singular] && this.updateFiles) {\n      this.cache[this.locale][singular] = {\n        one: singular,\n        other: plural\n      }; // include the current directory and locale,\n      // since these values could change before the\n      // write is performed.\n\n      this._enqueueWrite({\n        directory: this.directory,\n        locale: this.locale,\n        cb\n      });\n    } else {\n      cb();\n    } // if a %d placeholder is provided, add quantity\n    // to the arguments expanded by util.format.\n\n\n    const values = [str];\n    if (~str.indexOf('%d')) values.push(quantity);\n    return shim.format.apply(shim.format, values.concat(args));\n  }\n\n  setLocale(locale) {\n    this.locale = locale;\n  }\n\n  getLocale() {\n    return this.locale;\n  }\n\n  updateLocale(obj) {\n    if (!this.cache[this.locale]) this._readLocaleFile();\n\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        this.cache[this.locale][key] = obj[key];\n      }\n    }\n  }\n\n  _taggedLiteral(parts) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    let str = '';\n    parts.forEach(function (part, i) {\n      const arg = args[i + 1];\n      str += part;\n\n      if (typeof arg !== 'undefined') {\n        str += '%s';\n      }\n    });\n    return this.__.apply(this, [str].concat([].slice.call(args, 1)));\n  }\n\n  _enqueueWrite(work) {\n    this.writeQueue.push(work);\n    if (this.writeQueue.length === 1) this._processWriteQueue();\n  }\n\n  _processWriteQueue() {\n    const _this = this;\n\n    const work = this.writeQueue[0]; // destructure the enqueued work.\n\n    const directory = work.directory;\n    const locale = work.locale;\n    const cb = work.cb;\n\n    const languageFile = this._resolveLocaleFile(directory, locale);\n\n    const serializedLocale = JSON.stringify(this.cache[locale], null, 2);\n    shim.fs.writeFile(languageFile, serializedLocale, 'utf-8', function (err) {\n      _this.writeQueue.shift();\n\n      if (_this.writeQueue.length > 0) _this._processWriteQueue();\n      cb(err);\n    });\n  }\n\n  _readLocaleFile() {\n    let localeLookup = {};\n\n    const languageFile = this._resolveLocaleFile(this.directory, this.locale);\n\n    try {\n      // When using a bundler such as webpack, readFileSync may not be defined:\n      if (shim.fs.readFileSync) {\n        localeLookup = JSON.parse(shim.fs.readFileSync(languageFile, 'utf-8'));\n      }\n    } catch (err) {\n      if (err instanceof SyntaxError) {\n        err.message = 'syntax error in ' + languageFile;\n      }\n\n      if (err.code === 'ENOENT') localeLookup = {};else throw err;\n    }\n\n    this.cache[this.locale] = localeLookup;\n  }\n\n  _resolveLocaleFile(directory, locale) {\n    let file = shim.resolve(directory, './', locale + '.json');\n\n    if (this.fallbackToLanguage && !this._fileExistsSync(file) && ~locale.lastIndexOf('_')) {\n      // attempt fallback to language only\n      const languageFile = shim.resolve(directory, './', locale.split('_')[0] + '.json');\n      if (this._fileExistsSync(languageFile)) file = languageFile;\n    }\n\n    return file;\n  }\n\n  _fileExistsSync(file) {\n    return shim.exists(file);\n  }\n\n}\n\nexport function y18n(opts, _shim) {\n  shim = _shim;\n  const y18n = new Y18N(opts);\n  return {\n    __: y18n.__.bind(y18n),\n    __n: y18n.__n.bind(y18n),\n    setLocale: y18n.setLocale.bind(y18n),\n    getLocale: y18n.getLocale.bind(y18n),\n    updateLocale: y18n.updateLocale.bind(y18n),\n    locale: y18n.locale\n  };\n}","map":{"version":3,"sources":["C:/Users/YC/Desktop/brief6-frontend/node_modules/y18n/build/lib/index.js"],"names":["shim","Y18N","constructor","opts","directory","updateFiles","locale","fallbackToLanguage","cache","Object","create","writeQueue","__","args","arguments","_taggedLiteral","str","shift","cb","length","pop","_readLocaleFile","_enqueueWrite","format","apply","concat","__n","Array","prototype","slice","call","singular","plural","quantity","entry","one","other","values","indexOf","push","setLocale","getLocale","updateLocale","obj","key","hasOwnProperty","parts","forEach","part","i","arg","work","_processWriteQueue","_this","languageFile","_resolveLocaleFile","serializedLocale","JSON","stringify","fs","writeFile","err","localeLookup","readFileSync","parse","SyntaxError","message","code","file","resolve","_fileExistsSync","lastIndexOf","split","exists","y18n","_shim","bind"],"mappings":"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","sourcesContent":["let shim;\nclass Y18N {\n    constructor(opts) {\n        // configurable options.\n        opts = opts || {};\n        this.directory = opts.directory || './locales';\n        this.updateFiles = typeof opts.updateFiles === 'boolean' ? opts.updateFiles : true;\n        this.locale = opts.locale || 'en';\n        this.fallbackToLanguage = typeof opts.fallbackToLanguage === 'boolean' ? opts.fallbackToLanguage : true;\n        // internal stuff.\n        this.cache = Object.create(null);\n        this.writeQueue = [];\n    }\n    __(...args) {\n        if (typeof arguments[0] !== 'string') {\n            return this._taggedLiteral(arguments[0], ...arguments);\n        }\n        const str = args.shift();\n        let cb = function () { }; // start with noop.\n        if (typeof args[args.length - 1] === 'function')\n            cb = args.pop();\n        cb = cb || function () { }; // noop.\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        // we've observed a new string, update the language file.\n        if (!this.cache[this.locale][str] && this.updateFiles) {\n            this.cache[this.locale][str] = str;\n            // include the current directory and locale,\n            // since these values could change before the\n            // write is performed.\n            this._enqueueWrite({\n                directory: this.directory,\n                locale: this.locale,\n                cb\n            });\n        }\n        else {\n            cb();\n        }\n        return shim.format.apply(shim.format, [this.cache[this.locale][str] || str].concat(args));\n    }\n    __n() {\n        const args = Array.prototype.slice.call(arguments);\n        const singular = args.shift();\n        const plural = args.shift();\n        const quantity = args.shift();\n        let cb = function () { }; // start with noop.\n        if (typeof args[args.length - 1] === 'function')\n            cb = args.pop();\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        let str = quantity === 1 ? singular : plural;\n        if (this.cache[this.locale][singular]) {\n            const entry = this.cache[this.locale][singular];\n            str = entry[quantity === 1 ? 'one' : 'other'];\n        }\n        // we've observed a new string, update the language file.\n        if (!this.cache[this.locale][singular] && this.updateFiles) {\n            this.cache[this.locale][singular] = {\n                one: singular,\n                other: plural\n            };\n            // include the current directory and locale,\n            // since these values could change before the\n            // write is performed.\n            this._enqueueWrite({\n                directory: this.directory,\n                locale: this.locale,\n                cb\n            });\n        }\n        else {\n            cb();\n        }\n        // if a %d placeholder is provided, add quantity\n        // to the arguments expanded by util.format.\n        const values = [str];\n        if (~str.indexOf('%d'))\n            values.push(quantity);\n        return shim.format.apply(shim.format, values.concat(args));\n    }\n    setLocale(locale) {\n        this.locale = locale;\n    }\n    getLocale() {\n        return this.locale;\n    }\n    updateLocale(obj) {\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                this.cache[this.locale][key] = obj[key];\n            }\n        }\n    }\n    _taggedLiteral(parts, ...args) {\n        let str = '';\n        parts.forEach(function (part, i) {\n            const arg = args[i + 1];\n            str += part;\n            if (typeof arg !== 'undefined') {\n                str += '%s';\n            }\n        });\n        return this.__.apply(this, [str].concat([].slice.call(args, 1)));\n    }\n    _enqueueWrite(work) {\n        this.writeQueue.push(work);\n        if (this.writeQueue.length === 1)\n            this._processWriteQueue();\n    }\n    _processWriteQueue() {\n        const _this = this;\n        const work = this.writeQueue[0];\n        // destructure the enqueued work.\n        const directory = work.directory;\n        const locale = work.locale;\n        const cb = work.cb;\n        const languageFile = this._resolveLocaleFile(directory, locale);\n        const serializedLocale = JSON.stringify(this.cache[locale], null, 2);\n        shim.fs.writeFile(languageFile, serializedLocale, 'utf-8', function (err) {\n            _this.writeQueue.shift();\n            if (_this.writeQueue.length > 0)\n                _this._processWriteQueue();\n            cb(err);\n        });\n    }\n    _readLocaleFile() {\n        let localeLookup = {};\n        const languageFile = this._resolveLocaleFile(this.directory, this.locale);\n        try {\n            // When using a bundler such as webpack, readFileSync may not be defined:\n            if (shim.fs.readFileSync) {\n                localeLookup = JSON.parse(shim.fs.readFileSync(languageFile, 'utf-8'));\n            }\n        }\n        catch (err) {\n            if (err instanceof SyntaxError) {\n                err.message = 'syntax error in ' + languageFile;\n            }\n            if (err.code === 'ENOENT')\n                localeLookup = {};\n            else\n                throw err;\n        }\n        this.cache[this.locale] = localeLookup;\n    }\n    _resolveLocaleFile(directory, locale) {\n        let file = shim.resolve(directory, './', locale + '.json');\n        if (this.fallbackToLanguage && !this._fileExistsSync(file) && ~locale.lastIndexOf('_')) {\n            // attempt fallback to language only\n            const languageFile = shim.resolve(directory, './', locale.split('_')[0] + '.json');\n            if (this._fileExistsSync(languageFile))\n                file = languageFile;\n        }\n        return file;\n    }\n    _fileExistsSync(file) {\n        return shim.exists(file);\n    }\n}\nexport function y18n(opts, _shim) {\n    shim = _shim;\n    const y18n = new Y18N(opts);\n    return {\n        __: y18n.__.bind(y18n),\n        __n: y18n.__n.bind(y18n),\n        setLocale: y18n.setLocale.bind(y18n),\n        getLocale: y18n.getLocale.bind(y18n),\n        updateLocale: y18n.updateLocale.bind(y18n),\n        locale: y18n.locale\n    };\n}\n"]},"metadata":{},"sourceType":"module"}